version: "0.3"

metadata:
  name: "docker"
  display_name: "Docker"
  description: "Platform for developing, shipping, and running applications in containers"
  version: "24.0.0"
  category: "container"
  subcategory: "runtime"
  tags: ["container", "virtualization", "devops", "deployment"]
  license: "Apache-2.0"
  language: "Go"
  maintainer: "Docker Inc."
  urls:
    website: "https://www.docker.com"
    documentation: "https://docs.docker.com"
    source: "https://github.com/moby/moby"
    issues: "https://github.com/moby/moby/issues"
    support: "https://www.docker.com/support"
    download: "https://download.docker.com"
    changelog: "https://docs.docker.com/engine/release-notes"
    license: "https://github.com/moby/moby/blob/master/LICENSE"
    sbom: "https://download.docker.com/linux/static/stable/x86_64/docker-24.0.0.tgz.sbom"
    icon: "https://www.docker.com/wp-content/uploads/2022/03/Moby-logo.png"
  security:
    security_contact: "security@docker.com"
    vulnerability_disclosure: "https://www.docker.com/security"
    cve_exceptions: ["CVE-2022-36109"]
    signing_key: "https://download.docker.com/linux/ubuntu/gpg"

# Script installations - primary method for convenience
scripts:
  - name: "official"
    url: "https://get.docker.com"
    checksum: "sha256:b5b2b2c507a0944348e0303114d8d93aaaa081732b86451d9bce1f432a537bc7"
    interpreter: "bash"
    timeout: 600
    arguments: ["--channel", "stable"]
    environment:
      CHANNEL: "stable"
      DOWNLOAD_URL: "https://download.docker.com"
      DRY_RUN: "0"
    working_dir: "/tmp"
    custom_commands:
      download: "curl -fsSL https://get.docker.com -o get-docker.sh"
      install: "bash get-docker.sh --channel stable"
      validation: "docker --version && systemctl is-active docker"
      version: "docker --version | cut -d' ' -f3 | sed 's/,//'"

  - name: "test"
    url: "https://test.docker.com"
    checksum: "sha256:abc123def456789012345678901234567890123456789012345678901234567890"
    interpreter: "bash"
    timeout: 600
    arguments: ["--channel", "test"]
    environment:
      CHANNEL: "test"
    working_dir: "/tmp"
    custom_commands:
      validation: "docker --version"

  - name: "edge"
    url: "https://get.docker.com"
    checksum: "sha256:def456abc789012345678901234567890123456789012345678901234567890123"
    interpreter: "bash"
    timeout: 900
    arguments: ["--channel", "edge"]
    environment:
      CHANNEL: "edge"
      EXPERIMENTAL: "1"
    working_dir: "/tmp"

# Binary downloads for static installations
binaries:
  - name: "static"
    url: "https://download.docker.com/linux/static/stable/{{architecture}}/docker-{{version}}.tgz"
    version: "24.0.0"
    checksum: "sha256:fa16d72a078210a54c47dd5bef2f8b9b8a01d94909a51453956b3ec6442ea4c5"
    install_path: "/usr/local/bin"
    archive:
      format: "tar.gz"
      strip_prefix: "docker/"
      extract_path: "docker/"
    permissions: "0755"
    custom_commands:
      install: "tar -xzf docker-{{version}}.tgz && cp docker/* /usr/local/bin/"
      validation: "docker --version"

# Package installations
packages:
  - name: "engine"
    package_name: "docker-ce"
    version: "5:24.0.0-1~ubuntu.22.04~jammy"
    alternatives: ["docker.io"]
  - name: "cli"
    package_name: "docker-ce-cli"
    version: "5:24.0.0-1~ubuntu.22.04~jammy"
  - name: "compose"
    package_name: "docker-compose-plugin"
    version: "2.20.0-1~ubuntu.22.04~jammy"
    alternatives: ["docker-compose"]

services:
  - name: "daemon"
    service_name: "docker"
    type: "systemd"
    enabled: true
    config_files: ["/etc/docker/daemon.json"]

files:
  - name: "config"
    path: "/etc/docker/daemon.json"
    type: "config"
    owner: "root"
    group: "root"
    mode: "0644"
    backup: true
  - name: "socket"
    path: "/var/run/docker.sock"
    type: "socket"
    owner: "root"
    group: "docker"
    mode: "0660"

directories:
  - name: "config"
    path: "/etc/docker"
    owner: "root"
    group: "root"
    mode: "0755"
  - name: "data"
    path: "/var/lib/docker"
    owner: "root"
    group: "root"
    mode: "0711"

commands:
  - name: "docker"
    path: "/usr/bin/docker"
    shell_completion: true
    man_page: "docker(1)"
  - name: "dockerd"
    path: "/usr/bin/dockerd"
    man_page: "dockerd(8)"

ports:
  - port: 2375
    protocol: "tcp"
    service: "docker-api"
    description: "Docker API (insecure)"
  - port: 2376
    protocol: "tcp"
    service: "docker-api-tls"
    description: "Docker API (TLS)"

providers:
  # Script installation with provider-specific configurations
  script:
    scripts:
      - name: "official"
        url: "https://get.docker.com"
        arguments: ["--channel", "stable", "--dry-run"]
        environment:
          CHANNEL: "stable"
        custom_commands:
          validation: "docker --version && systemctl is-active docker"

  # Package manager installations
  apt:
    repositories:
      - name: "docker-official"
        url: "https://download.docker.com/linux/ubuntu"
        key: "https://download.docker.com/linux/ubuntu/gpg"
        type: "upstream"
        recommended: true
        packages:
          - name: "engine"
            package_name: "docker-ce"
            version: "5:24.0.0-1~ubuntu.22.04~jammy"
          - name: "cli"
            package_name: "docker-ce-cli"
            version: "5:24.0.0-1~ubuntu.22.04~jammy"
          - name: "compose"
            package_name: "docker-compose-plugin"
            version: "2.20.0-1~ubuntu.22.04~jammy"
      - name: "ubuntu-default"
        type: "os-default"
        packages:
          - name: "engine"
            package_name: "docker.io"
          - name: "compose"
            package_name: "docker-compose"
        notes: "Older version, not recommended for production"

  dnf:
    repositories:
      - name: "docker-official"
        url: "https://download.docker.com/linux/fedora"
        key: "https://download.docker.com/linux/fedora/gpg"
        type: "upstream"
        recommended: true
        packages:
          - name: "engine"
            package_name: "docker-ce"
          - name: "cli"
            package_name: "docker-ce-cli"
          - name: "compose"
            package_name: "docker-compose-plugin"

  brew:
    packages:
      - name: "engine"
        package_name: "docker"
      - name: "compose"
        package_name: "docker-compose"

  # Binary installation for static deployments
  binary:
    binaries:
      - name: "static"
        url: "https://download.docker.com/linux/static/stable/{{architecture}}/docker-{{version}}.tgz"
        version: "24.0.0"
        install_path: "/usr/local/bin"
        custom_commands:
          install: "tar -xzf docker-{{version}}.tgz && cp docker/* /usr/local/bin/ && chmod +x /usr/local/bin/docker*"

  # Container-based Docker-in-Docker
  docker:
    containers:
      - name: "dind"
        image: "docker"
        tag: "24.0-dind"
        registry: "docker.io"
        ports: ["2376:2376"]
        volumes: ["/var/lib/docker"]
        environment:
          DOCKER_TLS_CERTDIR: "/certs"
        labels:
          purpose: "docker-in-docker"

compatibility:
  matrix:
    - provider: "script"
      platform: ["linux"]
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
      tested: true
      notes: "Convenience script for quick installation"
    
    - provider: "binary"
      platform: ["linux"]
      architecture: ["amd64", "arm64", "armhf", "s390x"]
      supported: true
      recommended: false
      notes: "Static binaries for custom deployments"
    
    - provider: "apt"
      platform: ["ubuntu", "debian"]
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
      tested: true
    
    - provider: "dnf"
      platform: ["fedora", "rhel", "centos"]
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
    
    - provider: "brew"
      platform: "darwin"
      architecture: ["amd64", "arm64"]
      supported: true
      recommended: true
      notes: "Docker Desktop for Mac"
    
    - provider: "docker"
      platform: ["linux", "darwin", "windows"]
      architecture: ["amd64", "arm64"]
      supported: true
      notes: "Docker-in-Docker for containerized environments"

  versions:
    latest: "24.0.0"
    minimum: "20.10.0"
    latest_lts: "23.0.6"
    latest_minimum: "24.0.0"