# APK Provider Data - Alpine Linux package manager
version: "1.0"

provider:
  name: "apk"
  display_name: "Alpine Package Keeper"
  description: "Package manager for Alpine Linux"
  type: "package_manager"
  platforms: ["alpine"]
  executable: "apk"  # Main executable for availability detection
  capabilities: ["install", "uninstall", "upgrade", "search", "info", "list", "version", "start", "stop", "restart", "enable", "disable", "status", "logs"]

actions:
  install:
    description: "Install packages via APK"
    steps:
      - name: "update-index"
        command: "apk update"
      - name: "install-packages"
        command: "apk add {{sai_packages(saidata, 'apk')}}"
    timeout: 300
    validation:
      command: "apk info | grep {{sai_package(saidata, 'apk')}}"
      expected_exit_code: 0
    rollback: "apk del {{sai_packages(saidata, 'apk')}}"

  uninstall:
    description: "Remove packages via APK"
    template: "apk del {{sai_packages(saidata, 'apk')}}"
    detection: "apk info {{sai_package(saidata, 'apk')}} >/dev/null 2>&1"
    validation:
      command: "! apk info | grep {{sai_package(saidata, 'apk')}}"
      expected_exit_code: 0

  upgrade:
    description: "Upgrade packages via APK"
    steps:
      - name: "update-index"
        command: "apk update"
      - name: "upgrade-packages"
        command: "apk upgrade {{sai_packages(saidata, 'apk')}}"
    timeout: 300
    detection: "apk info {{sai_package(saidata, 'apk')}} >/dev/null 2>&1"

  start:
    description: "Start service via rc-service"
    template: "rc-service {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} start"
    validation:
      command: "rc-service {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} status"
      expected_output: "started"

  stop:
    description: "Stop service via rc-service"
    template: "rc-service {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} stop"
    validation:
      command: "rc-service {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} status"
      expected_output: "stopped"

  restart:
    description: "Restart service via rc-service"
    template: "rc-service {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} restart"

  enable:
    description: "Enable service auto-start"
    template: "rc-update add {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} default"

  disable:
    description: "Disable service auto-start"
    template: "rc-update del {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} default"

  status:
    description: "Check service status"
    template: "rc-service {{sai_service(saidata, 'service_name') or sai_package(saidata, 'apk')}} status"

  logs:
    description: "Show service logs"
    template: "tail -n 50 {{sai_file(saidata) or '/var/log/' + saidata.metadata.name + '/' + saidata.metadata.name + '.log'}}"

  info:
    description: "Show package information"
    template: "apk info {{sai_package(saidata, 'apk')}}"

  search:
    description: "Search for packages"
    template: "apk search {{sai_package(saidata, 'apk')}}"

  list:
    description: "List installed packages"
    template: "apk info | grep {{sai_package(saidata, 'apk')}}"

  version:
    description: "Show package version"
    template: "apk info {{sai_package(saidata, 'apk')}} | grep '^{{sai_package(saidata, 'apk')}}-' | head -1"
