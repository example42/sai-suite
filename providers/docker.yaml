# Docker Provider Data - Container platform
version: "1.0"

provider:
  name: "docker"
  display_name: "Docker"
  description: "Container platform for building, shipping, and running applications"
  type: "container"
  platforms: ["linux", "macos", "windows"]
  capabilities: ["install", "uninstall", "upgrade", "start", "stop", "restart", "status", "logs", "info", "list"]

actions:
  install:
    description: "Pull and create Docker container"
    steps:
      - name: "pull-image"
        command: "docker pull {{sai_package(saidata) or saidata.metadata.name}}:{{sai_package(saidata, 0, "version") or 'latest'}}"
      - name: "create-container"
        command: "docker create --name {{container_name}} -p {{sai_port(saidata) or '80'}}:{{sai_port(saidata) or '80'}} {{sai_package(saidata) or saidata.metadata.name}}:{{sai_package(saidata, 0, "version") or 'latest'}}"
    timeout: 600
    validation:
      command: "docker ps -a | grep {{container_name}}"
      expected_exit_code: 0
    rollback: "docker rm -f {{container_name}}"
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  uninstall:
    description: "Remove Docker container and image"
    steps:
      - name: "stop-container"
        command: "docker stop {{container_name}}"
        ignore_failure: true
      - name: "remove-container"
        command: "docker rm {{container_name}}"
        ignore_failure: true
      - name: "remove-image"
        command: "docker rmi {{sai_package(saidata) or saidata.metadata.name}}:{{sai_package(saidata, 0, "version") or 'latest'}}"
        ignore_failure: true
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  upgrade:
    description: "Upgrade Docker container"
    steps:
      - name: "stop-container"
        command: "docker stop {{container_name}}"
      - name: "remove-container"
        command: "docker rm {{container_name}}"
      - name: "pull-new-image"
        command: "docker pull {{sai_package(saidata) or saidata.metadata.name}}:{{sai_package(saidata, 0, "version") or 'latest'}}"
      - name: "create-new-container"
        command: "docker create --name {{container_name}} -p {{sai_port(saidata) or '80'}}:{{sai_port(saidata) or '80'}} {{sai_package(saidata) or saidata.metadata.name}}:{{sai_package(saidata, 0, "version") or 'latest'}}"
      - name: "start-container"
        command: "docker start {{container_name}}"
    timeout: 600
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  start:
    description: "Start Docker container"
    template: "docker start {{container_name}}"
    detection: "PLACEHOLDER_DETECTION"
    validation:
      command: "docker ps | grep {{container_name}}"
      expected_exit_code: 0
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  stop:
    description: "Stop Docker container"
    template: "docker stop {{container_name}}"
    validation:
      command: "docker ps | grep {{container_name}} || exit 0"
      expected_exit_code: 0
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  restart:
    description: "Restart Docker container"
    template: "docker restart {{container_name}}"
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  status:
    description: "Check Docker container status"
    template: "docker ps -a | grep {{container_name}}"
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  logs:
    description: "Show Docker container logs"
    template: "docker logs --tail 50 {{container_name}}"
    variables:
      container_name: "{{sai_package(saidata, 'docker')}}-container"

  info:
    description: "Show Docker image information"
    template: "docker inspect {{sai_package(saidata) or saidata.metadata.name}}:{{sai_package(saidata, 0, "version") or 'latest'}}"

  list:
    description: "List Docker containers"
    template: "docker ps -a | grep {{sai_package(saidata, 'docker')}}"
