# Nix Provider Data - Functional package manager
version: "1.0"

provider:
  name: "nix"
  display_name: "Nix Package Manager"
  description: "Purely functional package manager"
  type: "package_manager"
  platforms: ["nixos", "linux", "macos"]
  capabilities: ["install", "uninstall", "upgrade", "search", "info", "list", "start", "stop", "restart", "enable", "disable", "status", "logs"]

actions:
  install:
    description: "Install packages via Nix"
    template: "nix-env -iA nixpkgs.{{sai_package(saidata, 0, 'nix')}}"
    timeout: 600
    validation:
      command: "nix-env -q | grep {{saidata.metadata.name}}"
      expected_exit_code: 0
    rollback: "nix-env -e {{sai_package(saidata, 0, 'nix')}}"

  uninstall:
    description: "Remove packages via Nix"
    template: "nix-env -e {{sai_package(saidata, 0, 'nix')}}"
    validation:
      command: "! nix-env -q | grep {{saidata.metadata.name}}"
      expected_exit_code: 0

  upgrade:
    description: "Upgrade packages via Nix"
    template: "nix-env -u {{sai_package(saidata, 0, 'nix')}}"
    timeout: 600

  start:
    description: "Start service via systemctl"
    template: "systemctl start {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"
    validation:
      command: "systemctl is-active {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"
      expected_output: "active"

  stop:
    description: "Stop service via systemctl"
    template: "systemctl stop {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"
    validation:
      command: "systemctl is-active {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"
      expected_output: "inactive"

  restart:
    description: "Restart service via systemctl"
    template: "systemctl restart {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"

  enable:
    description: "Enable service auto-start"
    template: "systemctl enable {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"

  disable:
    description: "Disable service auto-start"
    template: "systemctl disable {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"

  status:
    description: "Check service status"
    template: "systemctl status {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}}"

  logs:
    description: "Show service logs"
    template: "journalctl -u {{sai_service(saidata, 0, 'service_name') or sai_package(saidata, 0, 'nix')}} --no-pager -n 50"

  info:
    description: "Show package information"
    template: "nix-env -qa --description {{sai_package(saidata, 0, 'nix')}}"

  search:
    description: "Search for packages"
    template: "nix-env -qa | grep {{saidata.metadata.name}}"

  list:
    description: "List installed packages"
    template: "nix-env -q | grep {{saidata.metadata.name}}"
