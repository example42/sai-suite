# PyPI Provider Data - Python package manager
version: "1.0"

provider:
  name: "pypi"
  display_name: "Python Package Index"
  description: "Package manager for Python packages"
  type: "package_manager"
  platforms: ["linux", "macos", "windows"]
  priority: 25  # Lower priority, language-specific
  executable: "pip"  # Main executable for availability detection
  capabilities: ["install", "uninstall", "upgrade", "search", "info", "list", "start", "stop", "restart", "status"]

actions:
  install:
    description: "Install packages via pip"
    template: "pip install {{sai_packages(saidata, 'pypi')}}"
    timeout: 300
    validation:
      command: "pip list | grep {{saidata.metadata.name}}"
      expected_exit_code: 0
    rollback: "pip uninstall -y {{sai_packages(saidata, 'pypi')}}"

  uninstall:
    description: "Remove packages via pip"
    template: "pip uninstall -y {{sai_packages(saidata, 'pypi')}}"
    validation:
      command: "! pip list | grep {{saidata.metadata.name}}"
      expected_exit_code: 0

  upgrade:
    description: "Upgrade packages via pip"
    template: "pip install --upgrade {{sai_packages(saidata, 'pypi')}}"
    timeout: 300

  start:
    description: "Start Python application"
    template: "python -m {{sai_package(saidata, 0, 'pypi')}}"

  stop:
    description: "Stop Python application"
    template: "pkill -f {{saidata.metadata.name}}"

  restart:
    description: "Restart Python application"
    steps:
      - name: "stop-app"
        command: "pkill -f {{saidata.metadata.name}}"
        ignore_failure: true
      - name: "start-app"
        command: "python -m {{sai_package(saidata, 0, 'pypi')}}"

  status:
    description: "Check application status"
    template: "pgrep -f {{saidata.metadata.name}}"

  info:
    description: "Show package information"
    template: "pip show {{sai_package(saidata, 0, 'pypi')}}"

  search:
    description: "Search for packages"
    template: "pip search {{saidata.metadata.name}}"

  list:
    description: "List installed packages"
    template: "pip list | grep {{saidata.metadata.name}}"
